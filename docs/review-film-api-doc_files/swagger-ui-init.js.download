
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "openapi": "3.0.0",
    "info": {
      "title": "Reviem Pilem API",
      "version": "1.0.0",
      "description": "API documentation for Reviem Pilem"
    },
    "servers": [
      {
        "url": "http://localhost:8080"
      }
    ],
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    },
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "paths": {
      "/auth/register": {
        "post": {
          "summary": "Register a new user",
          "tags": [
            "Authentication"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "john_doe"
                    },
                    "email": {
                      "type": "string",
                      "example": "john@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "securepassword123"
                    },
                    "display_name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "bio": {
                      "type": "string",
                      "example": "Movie enthusiast"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User registered successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "User registered successfully"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request (e.g., missing fields or invalid input)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Please fill all fields"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/auth/login": {
        "get": {
          "summary": "Log in a user",
          "tags": [
            "Authentication"
          ],
          "parameters": [
            {
              "in": "query",
              "name": "username",
              "schema": {
                "type": "string",
                "example": "john_doe"
              },
              "required": true,
              "description": "The user's username"
            },
            {
              "in": "query",
              "name": "password",
              "schema": {
                "type": "string",
                "example": "securepassword123"
              },
              "required": true,
              "description": "The user's password"
            }
          ],
          "responses": {
            "200": {
              "description": "User logged in successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Login successful"
                      },
                      "token": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "username": {
                            "type": "string",
                            "example": "john_doe"
                          },
                          "display_name": {
                            "type": "string",
                            "example": "John Doe"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request (e.g., missing fields)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Please fill all fields"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized (e.g., invalid username or password)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Invalid username or password"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/films/allFilmsByGenre/{genre}": {
        "get": {
          "summary": "Get all films by genre",
          "tags": [
            "Films"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "genre",
              "required": true,
              "schema": {
                "type": "string",
                "example": "Action"
              },
              "description": "The genre of the films"
            }
          ],
          "responses": {
            "200": {
              "description": "A list of films for the specified genre",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "title": {
                          "type": "string",
                          "example": "Inception"
                        },
                        "synopsis": {
                          "type": "string",
                          "example": "A mind-bending thriller."
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "No films found for the specified genre"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/films/allFilms": {
        "get": {
          "summary": "Get all films",
          "tags": [
            "Films"
          ],
          "responses": {
            "200": {
              "description": "A list of all films",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "title": {
                          "type": "string",
                          "example": "Inception"
                        },
                        "synopsis": {
                          "type": "string",
                          "example": "A mind-bending thriller."
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/films/filmById/{id}": {
        "get": {
          "summary": "Get a film by ID",
          "tags": [
            "Films"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 1
              },
              "description": "The ID of the film"
            }
          ],
          "responses": {
            "200": {
              "description": "The film details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1
                      },
                      "title": {
                        "type": "string",
                        "example": "Inception"
                      },
                      "synopsis": {
                        "type": "string",
                        "example": "A mind-bending thriller."
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Film not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/films/search": {
        "get": {
          "summary": "Search films by title",
          "tags": [
            "Films"
          ],
          "parameters": [
            {
              "in": "query",
              "name": "title",
              "required": true,
              "schema": {
                "type": "string",
                "example": "Inception"
              },
              "description": "The title of the film to search for"
            }
          ],
          "responses": {
            "200": {
              "description": "A list of films matching the title"
            },
            "400": {
              "description": "Missing title query parameter"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/films/addFilm": {
        "post": {
          "summary": "Add a new film",
          "tags": [
            "Films"
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "Inception"
                    },
                    "synopsis": {
                      "type": "string",
                      "example": "A mind-bending thriller."
                    },
                    "status": {
                      "type": "string",
                      "example": "finished_airing"
                    },
                    "total_episodes": {
                      "type": "integer",
                      "example": 1
                    },
                    "release_date": {
                      "type": "string",
                      "format": "date",
                      "example": "2010-07-16"
                    },
                    "genres": {
                      "type": "string",
                      "example": [
                        "Action",
                        "Sci-Fi"
                      ]
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Film added successfully"
            },
            "400": {
              "description": "Bad request (e.g., invalid input)"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/films/updateFilm": {
        "patch": {
          "summary": "Update an existing film",
          "tags": [
            "Films"
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "title": {
                      "type": "string",
                      "example": "Inception"
                    },
                    "synopsis": {
                      "type": "string",
                      "example": "A mind-bending thriller."
                    },
                    "status": {
                      "type": "string",
                      "example": "finished_airing"
                    },
                    "total_episodes": {
                      "type": "integer",
                      "example": 1
                    },
                    "release_date": {
                      "type": "string",
                      "format": "date",
                      "example": "2010-07-16"
                    },
                    "genres": {
                      "type": "string",
                      "example": [
                        "Action",
                        "Sci-Fi"
                      ]
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary"
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Film updated successfully"
            },
            "400": {
              "description": "Bad request (e.g., invalid input)"
            },
            "404": {
              "description": "Film not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/films/deleteFilm/{id}": {
        "delete": {
          "summary": "Delete a film by ID",
          "tags": [
            "Films"
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 1
              },
              "description": "The ID of the film to delete"
            }
          ],
          "responses": {
            "200": {
              "description": "Film deleted successfully"
            },
            "404": {
              "description": "Film not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/genres/allGenres": {
        "get": {
          "summary": "Get all genres",
          "tags": [
            "Genres"
          ],
          "responses": {
            "200": {
              "description": "A list of all genres",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Action"
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/genres/addGenre": {
        "post": {
          "summary": "Add a new genre",
          "tags": [
            "Genres"
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Action"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Genre added successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Genre added successfully"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request (e.g., missing fields)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Please fill all fields"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/genres/updateGenre": {
        "patch": {
          "summary": "Update an existing genre",
          "tags": [
            "Genres"
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "Adventure"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Genre updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Genre updated successfully"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad request (e.g., missing fields)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Please provide both id and name"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Genre not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Genre not found"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/reviews/{filmId}": {
        "post": {
          "summary": "Add a review for a film",
          "tags": [
            "Reviews"
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "filmId",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 1
              },
              "description": "The ID of the film to review"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rating": {
                      "type": "integer",
                      "example": 8
                    },
                    "comment": {
                      "type": "string",
                      "example": "Great movie!"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Review added successfully"
            },
            "400": {
              "description": "Bad request (e.g., missing fields or invalid conditions)"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        },
        "get": {
          "summary": "Get all reviews for a film",
          "tags": [
            "Reviews"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "filmId",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 1
              },
              "description": "The ID of the film to get reviews for"
            }
          ],
          "responses": {
            "200": {
              "description": "A list of reviews for the specified film",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "userId": {
                          "type": "integer",
                          "example": 2
                        },
                        "rating": {
                          "type": "integer",
                          "example": 8
                        },
                        "comment": {
                          "type": "string",
                          "example": "Great movie!"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-04-22T10:00:00Z"
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/reviews/{reviewId}": {
        "patch": {
          "summary": "Update a review",
          "tags": [
            "Reviews"
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "reviewId",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 1
              },
              "description": "The ID of the review to update"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rating": {
                      "type": "integer",
                      "example": 9
                    },
                    "comment": {
                      "type": "string",
                      "example": "Updated review comment"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Review updated successfully"
            },
            "400": {
              "description": "Bad request (e.g., missing fields)"
            },
            "404": {
              "description": "Review not found or not authorized to update"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        },
        "delete": {
          "summary": "Delete a review",
          "tags": [
            "Reviews"
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "reviewId",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 1
              },
              "description": "The ID of the review to delete"
            }
          ],
          "responses": {
            "200": {
              "description": "Review deleted successfully"
            },
            "404": {
              "description": "Review not found or not authorized to delete"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/reviews/reaction/{reviewId}": {
        "post": {
          "summary": "React to a review",
          "tags": [
            "Reviews"
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "reviewId",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 1
              },
              "description": "The ID of the review to react to"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reaction": {
                      "type": "string",
                      "enum": [
                        "like",
                        "dislike"
                      ],
                      "example": "like"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Reaction added successfully"
            },
            "400": {
              "description": "Invalid reaction or bad request"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/user/list/{filmId}": {
        "post": {
          "summary": "Add a film to the user's list",
          "tags": [
            "User List"
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "filmId",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 1
              },
              "description": "The ID of the film to add to the user's list"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list_type": {
                      "type": "string",
                      "enum": [
                        "plan_to_watch",
                        "watching",
                        "completed",
                        "on_hold",
                        "dropped"
                      ],
                      "example": "plan_to_watch"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Film added to list successfully"
            },
            "400": {
              "description": "Invalid list type or other bad request"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        },
        "patch": {
          "summary": "Update the status of a film in the user's list",
          "tags": [
            "User List"
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "filmId",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 1
              },
              "description": "The ID of the film to update in the user's list"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list_type": {
                      "type": "string",
                      "enum": [
                        "plan_to_watch",
                        "watching",
                        "completed",
                        "on_hold",
                        "dropped"
                      ],
                      "example": "completed"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "List status updated successfully"
            },
            "400": {
              "description": "Invalid list type or other bad request"
            },
            "404": {
              "description": "Film not found in the user's list"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/user/list/{userId}": {
        "get": {
          "summary": "Get the user's film list",
          "tags": [
            "User List"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 1
              },
              "description": "The ID of the user whose list is being fetched"
            }
          ],
          "responses": {
            "200": {
              "description": "A list of films in the user's list",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "filmId": {
                          "type": "integer",
                          "example": 1
                        },
                        "title": {
                          "type": "string",
                          "example": "Inception"
                        },
                        "list_type": {
                          "type": "string",
                          "example": "completed"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-04-22T10:00:00Z"
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/user/profile/{userId}": {
        "get": {
          "summary": "View a user's profile",
          "tags": [
            "User Profile"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 1
              },
              "description": "The ID of the user whose profile is being fetched"
            }
          ],
          "responses": {
            "200": {
              "description": "User profile and film list fetched successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "profile": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "username": {
                            "type": "string",
                            "example": "john_doe"
                          },
                          "display_name": {
                            "type": "string",
                            "example": "John Doe"
                          },
                          "bio": {
                            "type": "string",
                            "example": "Movie enthusiast"
                          }
                        }
                      },
                      "filmList": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "filmId": {
                              "type": "integer",
                              "example": 1
                            },
                            "title": {
                              "type": "string",
                              "example": "Inception"
                            },
                            "list_type": {
                              "type": "string",
                              "example": "completed"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        },
        "patch": {
          "summary": "Update the authenticated user's profile",
          "tags": [
            "User Profile"
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "userId",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 1
              },
              "description": "The ID of the user whose profile is being updated"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "display_name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "bio": {
                      "type": "string",
                      "example": "Movie enthusiast"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Profile updated successfully"
            },
            "400": {
              "description": "Bad request (e.g., missing fields)"
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      }
    },
    "tags": []
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.preauthorizeApiKey) {
    const key = customOptions.preauthorizeApiKey.authDefinitionKey;
    const value = customOptions.preauthorizeApiKey.apiKeyValue;
    if (!!key && !!value) {
      const pid = setInterval(() => {
        const authorized = ui.preauthorizeApiKey(key, value);
        if(!!authorized) clearInterval(pid);
      }, 500)

    }
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}
